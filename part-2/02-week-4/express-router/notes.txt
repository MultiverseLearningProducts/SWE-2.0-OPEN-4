Express server - Learning objectives

- How to create an express server
- How to write an endpoint

-----------------------------------
Set up exercise [15 minutes]

1. Create the following file structure: [x]

server/
    config/
        db.js
    models/
        Band.js
        Musician.js
        index.js
    seeders/
        seedData.js
        seed.js
    
    app.js (create this file)

2. Seed your database (you might have to update the path in the package.json file) [x]

-----------------------------------
Web Server Recap:

HTTP request methods
GET, POST, PUT, DELETE, PATCH

GET - requesting a resource
POST - create a resource
PUT - to completely replace or update a resource
DELETE - to delete a resource
PATCH - partially update a resource 


Today we are going to learn how to create a web server that will act as an interface that will handle different types of requests from the client

Where are we in our fullstack journey?

[db] - [server]           - [client-side]
[ server side/ backend ]    [client-side/ front end]
-----------------------------------
DEMO:




------------
CRUD - 

Operations   HTTP method    Sequelize Methods
       
Create       POST             Model.create()  [x]
Read         GET              Model.findByPk()  Model.findAll() [x]
Update       PUT/PATCH        Model.update() [x]
Delete       DELETE           Model.destroy() [x]

------------
Express Router
Express-Validator

