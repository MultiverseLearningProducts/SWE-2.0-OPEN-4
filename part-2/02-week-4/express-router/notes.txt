Express server - Learning objectives

- How to create an express server
- How to write an endpoint

-----------------------------------
Set up exercise [15 minutes]

1. Create the following file structure: [x]

server/
    config/
        db.js
    models/
        Band.js
        Musician.js
        index.js
    seeders/
        seedData.js
        seed.js
    
    app.js (create this file)

2. Seed your database (you might have to update the path in the package.json file) [x]

-----------------------------------
Web Server Recap:

HTTP request methods
GET, POST, PUT, DELETE, PATCH

GET - requesting a resource
POST - create a resource
PUT - to completely replace or update a resource
DELETE - to delete a resource
PATCH - partially update a resource 


Today we are going to learn how to create a web server that will act as an interface that will handle different types of requests from the client

Where are we in our fullstack journey?

[db] - [server]           - [client-side]
[ server side/ backend ]    [client-side/ front end]
-----------------------------------
DEMO:




------------
CRUD - 

Operations   HTTP method    Sequelize Methods
       
Create       POST             Model.create()  [x]
Read         GET              Model.findByPk()  Model.findAll() [x]
Update       PUT/PATCH        Model.update() [x]
Delete       DELETE           Model.destroy() [x]

------------
Express Router
    - Is a powerful middleware that allows to modularize our route handling logic into separate files or directories. Helps us organize our code as our application scales


Game Plan:
    1. Create routes directory [x]
    2. Bring the routes from app.js into bandRoutes.js and musicianRoutes.js [x]
    3. Configure express router for each of the routes files [x]
    4. Re-import our routes into app.js 
        5.** set a prefix for your request url and clean up the routes from each file



Express-Validator
    - A package that provides a set of middleware functions for validating incoming request data. It helps us check the incoming requests from the client side is meeting specific criterias (email format, if fields are left empty etc)

