Lesson Objectives

1. To understand what an array is in JavaScript
2. To understand the various methods and properties of arrays in JavaScript.
3. How to access nested arrays


-------------------------------------------------------
1. To understand what an array is in JavaScript.

    1. Can you explain what an array is and its purpose in JavaScript?

    2. How is data stored and organized in an array in JavaScript?

-------------------------------------------------------
2. To be able to create, modify and manipulate arrays.

    1. How do you create an array in JavaScript and what is the syntax for it?

    2. Can you give examples of methods to modify and manipulate arrays in JavaScript, such as adding or removing elements?

        Common Property:
        .length
        -------------- 
        push() - adds elements to the end of the array
        pop() - removes the last element of the array
        unshift() - adds elements to the beginning of the array
        shift() - removes the first element of the array
        reverse() - reverses the order of the elements in the array
        concat() - combines two or more arrays into a new array
        join() - joins all elements of an array into a string.
        sort() - sorts the elements of the array
        --------------
        splice() - adds or removes elements anywhere in the array
        slice() - returns a new array with a portion of the original array
        --------------
        map() - creates a new array with the results of calling a provided function on every element in the calling array. It returns a new array, leaving the original array unchanged.
        --------------
        forEach() - method in JavaScript executes a provided function once for each array element. Unlike map(), forEach() does not return a new array and instead performs an operation for each element in the array.
        --------------
        reduce() - The reduce() method in JavaScript is an array method that reduces the elements of an array to a single value by applying a callback function to each element and maintaining an accumulator.




   